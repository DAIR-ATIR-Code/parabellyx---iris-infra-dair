apiVersion: v1
kind: Namespace
metadata:
  name: appsec
---
apiVersion: v1
data:
  JAVA_OPTS: -Djenkins.install.runSetupWizard=true
  JENKINS_OPTS: --prefix=/jenkins --argumentsRealm.passwd.admin=admin --argumentsRealm.roles.admin=admin
kind: ConfigMap
metadata:
  name: jenkins-config-hg4472tk7h
  namespace: appsec
---
apiVersion: v1
data:
  PGDATA: /var/lib/postgresql/data/pgdata
  POSTGRES_DB: sonar
kind: ConfigMap
metadata:
  name: postgresql-config-49hchc5ddc
  namespace: appsec
---
apiVersion: v1
data:
  SONAR_WEB_CONTEXT: /sonar
kind: ConfigMap
metadata:
  name: sonarqube-config-bg2tch7ck2
  namespace: appsec
---
apiVersion: v1
data:
  POSTGRES_PASSWORD: IyNwYXNzd29yZCMj
  POSTGRES_USER: cGdzcWxhZG1pbg==
  SONAR_JDBC_PASSWORD: IyNwYXNzd29yZCMj
  SONAR_JDBC_USERNAME: cGdzcWxhZG1pbg==
kind: Secret
metadata:
  name: postgresql-secret-5hfh84d92g
  namespace: appsec
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-service
  namespace: appsec
spec:
  ports:
  - port: 8080
    protocol: TCP
  selector:
    app: jenkins
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgresql
  name: postgresql
  namespace: appsec
spec:
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
  selector:
    app: postgresql
---
apiVersion: v1
kind: Service
metadata:
  name: sonarqube-service
  namespace: appsec
spec:
  ports:
  - port: 9000
    protocol: TCP
  selector:
    app: sonarqube
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: jenkins
  name: jenkins-pv-claim
  namespace: appsec
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    app: postgresql
  name: postgresql-pv-claim
  namespace: appsec
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonar-extensions
  namespace: appsec
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-data
  namespace: appsec
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarqube-logs
  namespace: appsec
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins
  namespace: appsec
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins
  template:
    metadata:
      labels:
        app: jenkins
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: jenkins-config-hg4472tk7h
        image: docker.io/parabellyx/alpine-jenkins:0.3
        name: jenkins
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: /var/jenkins_home
          name: jenkins-home
      volumes:
      - name: jenkins-home
        persistentVolumeClaim:
          claimName: jenkins-pv-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
  namespace: appsec
spec:
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: postgresql-config-49hchc5ddc
        - secretRef:
            name: postgresql-secret-5hfh84d92g
        image: postgres:14.2
        imagePullPolicy: IfNotPresent
        name: postgresql
        ports:
        - containerPort: 5432
        volumeMounts:
        - mountPath: /var/lib/postgresql/data/pgdata
          name: postgresqldatadir
      volumes:
      - name: postgresqldatadir
        persistentVolumeClaim:
          claimName: postgresql-pv-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarqube
  namespace: appsec
spec:
  selector:
    matchLabels:
      app: sonarqube
  template:
    metadata:
      labels:
        app: sonarqube
    spec:
      containers:
      - env:
        - name: SONAR_JDBC_URL
          value: jdbc:postgresql://postgresql.appsec.svc.cluster.local:5432/sonar
        envFrom:
        - configMapRef:
            name: sonarqube-config-bg2tch7ck2
        - secretRef:
            name: postgresql-secret-5hfh84d92g
        image: parabellyx/sonarqube:0.2
        imagePullPolicy: IfNotPresent
        name: sonarqube
        ports:
        - containerPort: 9000
        volumeMounts:
        - mountPath: /opt/sonarqube/data
          name: sonarqubedata
        - mountPath: /opt/sonarqube/extensions
          name: sonarqubeextenion
        - mountPath: /opt/sonarqube/logs
          name: sonarqubelogs
      volumes:
      - name: sonarqubedata
        persistentVolumeClaim:
          claimName: sonarqube-data
      - name: sonarqubeextenion
        persistentVolumeClaim:
          claimName: sonar-extensions
      - name: sonarqubelogs
        persistentVolumeClaim:
          claimName: sonarqube-logs
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
  name: mainingress
  namespace: appsec
spec:
  rules:
  - http:
      paths:
      - backend:
          service:
            name: sonarqube-service
            port:
              number: 9000
        path: /sonar
        pathType: Prefix
      - backend:
          service:
            name: jenkins-service
            port:
              number: 8080
        path: /jenkins
        pathType: Prefix
  tls:
  - secretName: tls-secrets
